<controls:MetroWindow x:Class="CompilePalX.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        Title="Compile Pal X"
                      MinHeight="550" MinWidth="790"
                      Height="550" Width="790"
                      Closing="MetroWindow_Closing"
                      IconEdgeMode="Aliased" Icon="CompilePalIcon.ico" ShowIconOnTitleBar="False" 
                      Activated="MetroWindow_Activated" BorderThickness="1" BorderBrush="{DynamicResource AccentColorBrush}" >


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="80px"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <ListBox x:Name="MapListBox" Grid.Row="0" Margin="10,10,95,0" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1"></ListBox>
        <Button x:Name="AddMapButton"  Grid.Row="0" Content="Add Map..." Margin="0,10,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75" Click="AddMapButton_Click"/>
        <Button x:Name="RemoveMapButton"  Grid.Row="0" Content="Remove" Margin="0,45,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75" Click="RemoveMapButton_Click"/>
        <TabControl  Grid.Row="1" Margin="10,10,10,40">
            <TabItem Header="CONFIG">
                <Grid Background="#FFE5E5E5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="100"/>
                        <ColumnDefinition Width="Auto" MinWidth="100"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel Grid.Column="0" Margin="10,10,0,10" Background="White">
                        <Button x:Name="RemovePresetButton" Content="Remove" Margin="5,0,5,5" VerticalAlignment="Bottom" Click="RemovePresetButton_Click" DockPanel.Dock="Bottom"/>
                        <Button x:Name="ClonePresetButton" Content="Clone..." Margin="5,0,5,5" VerticalAlignment="Bottom" Click="ClonePresetButton_OnClick" DockPanel.Dock="Bottom"/>
                        <Button x:Name="AddPresetButton" Content="Add..." Margin="5,0,5,5" VerticalAlignment="Bottom"  Click="AddPresetButton_Click" DockPanel.Dock="Bottom"/>
                        <ListBox Name ="PresetConfigListBox" Margin="0,0,0,5" SelectionChanged="PresetConfigListBox_SelectionChanged" />
                    </DockPanel>
                    <DockPanel Grid.Column="1" Margin="10,10,0,10" Background="White">
                        <Button x:Name="RemoveProcessesButton" Content="Remove" DockPanel.Dock="Bottom" Margin="5,0,5,5" Grid.Row="1" Click="RemoveProcessButton_Click"/>
                        <Button x:Name="AddProcessesButton" Content="Add..." DockPanel.Dock="Bottom" Margin="5,0,5,5" Grid.Row="2" Click="AddProcessButton_Click"/>
                        <ListBox x:Name ="CompileProcessesListBox" Margin="0,0,0,5" Grid.Row="0" SelectionChanged="CompileProcessesListBox_SelectionChanged">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel HorizontalAlignment="Stretch">
                                        <Label Content="{Binding}"/>
                                        <CheckBox IsChecked="{Binding DoRun, Mode=TwoWay}" HorizontalAlignment="Right"/>
                                    </DockPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="36px"/>
                        </Grid.RowDefinitions>
                        <DataGrid Grid.Row ="0" Name="ConfigDataGrid" Margin="10,10,10,10" AutoGenerateColumns="False" CanUserAddRows="False" ItemsSource="{Binding}" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{ Binding Name}" IsReadOnly="True"/>
                                <DataGridTemplateColumn Header="Value">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" KeyUp="OnConfigChanged"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CanHaveValue}" Value="False">
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Description" Binding="{ Binding Description}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Warnings" Binding="{ Binding Warning}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Grid Grid.Row="1">
                            <TextBox Name="ParametersTextBox" Margin="10,0,180,0" VerticalAlignment="Top" IsEnabled="False"/>
                            <Button Content="Add..." Margin="10,0" Grid.Row="1" Width="80" HorizontalAlignment="Right" VerticalAlignment="Top" Name="AddParameterButton" Click="AddParameterButton_Click"/>
                            <Button Content="Remove" Margin="0,0,95,0" Grid.Row="1" Width="80" HorizontalAlignment="Right" VerticalAlignment="Top" Name="RemoveParameterButton" Click="RemoveParameterButton_OnClickParameterButton_Click"/>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Name="OutputTab" Header="OUTPUT">
                <Grid Background="#FFE5E5E5">
                    <RichTextBox IsReadOnly="True" x:Name="CompileOutputTextbox" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" BorderThickness="0"  Margin="10,10,10,10" FontFamily="Segoe UI, Lucida Sans Unicode, Verdana" IsReadOnlyCaretVisible="True" Block.LineHeight="2" IsDocumentEnabled="True"/>
                </Grid>

            </TabItem>
        </TabControl>
        <Button Name="CompileStartStopButton" Grid.Row="1" Content="Compile" Margin="10,10,10,10"  VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="75" Click="CompileStartStopButton_OnClick"/>
        <ProgressBar Name="CompileProgressBar" Margin="0,0,96,10" Grid.Row="1" Height="25" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="200"/>
        <Label Name="UpdateLabel" Visibility="Collapsed"  Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="10" MouseLeftButtonUp="UpdateLabel_MouseLeftButtonUp" >
            <Hyperlink Name="UpdateHyperLink"/></Label>
    </Grid>

    <Window.TaskbarItemInfo>
        <TaskbarItemInfo/>
    </Window.TaskbarItemInfo>
</controls:MetroWindow>
    
